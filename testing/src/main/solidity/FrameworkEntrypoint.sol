// SPDX-License-Identifier: MIT
pragma solidity 0.8.26;

import {TestingFrameworkStorageLayout} from "./TestingFrameworkStorageLayout.sol";
import {TestingBase} from "./TestingBase.sol";
import {TestingFrameworkEvents} from "./TestingFrameworkEvents.sol";

/**
 * @notice Framework Entrypoint that inherits storage layout and functions for execution.
 */
contract FrameworkEntrypoint is TestingFrameworkStorageLayout, TestingBase {
    /// @dev - this is inherited function executeCalls(ContractCall[] memory _contractCalls) public payable virtual;
    constructor() payable {

    }

    receive() external payable {

    }
    fallback() external payable {

    }

    function sendEth(address addr, int256 amount) external payable {
        assembly {
            let formedCallData := mload(0x40)
            let functionSelector := 0xf1f1f1f100000000000000000000000000000000000000000000000000000000
            mstore(formedCallData, functionSelector)
            let success := call(gas(), addr, amount, formedCallData, 0x20, 0, 0)
        // Check if the transfer was successful
            if iszero(success) {
            // Revert the transaction if the transfer failed
                revert(0, 0)
            }
        }
    }
}

/*
    Scenario:
    - Deploy Solidity Framework entrypoint ( Addr_0 )
    - Deploy Yul based contract with firstInt storage manipulation ( Addr_1 ) - snippet demonstrating verbatim bytecode
        [Addr_1,0xa770741d,0,0,0]
        ["0xE2A247187aFB847fC36070DccF2c76bA8237d378",0xa770741d,0,0,0]
    - Deploy Solidity contract with secondInt storage manipulation ( Addr_2 ) - demonstrating code snippets - delegateable storage adjustments
        [Addr_2,0x2792dcc80000000000000000000000000000000000000000000000000db4da5f7ef412b1,0,0,0]
        ["0xfD4331c96496A0FD6De3cb18d7CA52BDf0A6EE88",0x2792dcc80000000000000000000000000000000000000000000000000db4da5f7ef412b1,0,0,0]

    - Deploy Solidity Contract (Encode and write commands) to set first int and set second int ( Addr_3 ) - delegatecalls - demonstrating the ability to put function commands in contract code location for later use to simplify outer call requests
        [[Addr_1,0xa770741d,0,0,0],[Addr_2,0x2792dcc80000000000000000000000000000000000000000000000000db4da5f7ef412b1,0,0,0]]
        [["0xE2A247187aFB847fC36070DccF2c76bA8237d378",0xa770741d,0,0,0], ["0xfD4331c96496A0FD6De3cb18d7CA52BDf0A6EE88",0x2792dcc80000000000000000000000000000000000000000000000000db4da5f7ef412b1,0,0,0]]
        Addr_3 = 0xE9F535514219F04198880bAf8c02BEEb4688c5B9

    - Get a predetermined address for a Create2 contract (SelfDestructingDeeperCalls) that has a self destruct mechanism and a function on itself that can be called (Deployer = Framework Addr_0, but could be anything)
        - deployer = 0x81cf3A4AF9895d551b728Dc62af5B51117bCdA49
        - bytecode = 0x6080604052611813806100136000396000f3fe6080604052600436106100c65760003560e01c8063aae16a701161007f578063c4992dd511610059578063c4992dd514610256578063c564c63014610293578063e4f2355a146102be578063fc14f287146102da576100cd565b8063aae16a70146101b1578063aed9777e146101dc578063c0243a2814610219576100cd565b8063348b2afb146100cf5780633f5a0bdd146100ff5780634300409b1461012857806346a7d021146101535780638507a8f01461017e578063a30d978a14610195576100cd565b366100cd57005b005b6100e960048036038101906100e49190610a54565b610317565b6040516100f69190610af1565b60405180910390f35b34801561010b57600080fd5b5061012660048036038101906101219190610b4a565b61036d565b005b34801561013457600080fd5b5061013d6103bd565b60405161014a9190610b90565b60405180910390f35b34801561015f57600080fd5b506101686103c3565b6040516101759190610bc6565b60405180910390f35b34801561018a57600080fd5b506101936103d6565b005b6101af60048036038101906101aa9190610c0d565b6103f3565b005b3480156101bd57600080fd5b506101c6610422565b6040516101d39190610af1565b60405180910390f35b3480156101e857600080fd5b5061020360048036038101906101fe9190610c3a565b610448565b6040516102109190610af1565b60405180910390f35b34801561022557600080fd5b50610240600480360381019061023b9190610ca9565b61048e565b60405161024d9190610af1565b60405180910390f35b34801561026257600080fd5b5061027d60048036038101906102789190610d1e565b6104d5565b60405161028a9190610ddd565b60405180910390f35b34801561029f57600080fd5b506102a861050d565b6040516102b59190610b90565b60405180910390f35b6102d860048036038101906102d39190610fbc565b610513565b005b3480156102e657600080fd5b5061030160048036038101906102fc9190611060565b61069b565b60405161030e9190610af1565b60405180910390f35b6000348383516020850183f591508161032f57600080fd5b507fcf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca3128160405161035f9190610af1565b60405180910390a192915050565b7f3ab1d7915d663a46c292b8f01ac13567c748cff5213cb3652695882b5f9b2e0f3060405161039c9190610af1565b60405180910390a18073ffffffffffffffffffffffffffffffffffffffff16ff5b60005481565b600260009054906101000a900460ff1681565b6001600260006101000a81548160ff021916908315150217905550565b60006104008260006104d5565b80602001905181019061041391906112b9565b905061041e81610513565b5050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060ff60f81b8483858051906020012060405160200161046c94939291906113b8565b6040516020818303038152906040528051906020012060001c90509392505050565b600081518060401b6bfe61000180600a3d393df3000161fffe8211840152600b8101601584016000f09150816104cc5763301164256000526004601cfd5b80835250919050565b6060604051905064ffffffffff6001843b03166021810183601f8401863c808310838203028252815160400182016040525092915050565b60015481565b60005b81518110156106975760008083838151811061053557610534611406565b5b6020026020010151604001511461056a5782828151811061055957610558611406565b5b60200260200101516040015161056c565b5a5b9050600061060084848151811061058657610585611406565b5b6020026020010151600001518585815181106105a5576105a4611406565b5b602002602001015160200151848787815181106105c5576105c4611406565b5b6020026020010151606001516105f88989815181106105e7576105e6611406565b5b6020026020010151608001516106cf565b63ffffffff16565b90503073ffffffffffffffffffffffffffffffffffffffff1684848151811061062c5761062b611406565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff168215157f74501cd9bf7c785863dd834ae290e0772ddbc338f2c12ac0ce5ff3b5563492c2866040516106809190610b90565b60405180910390a482806001019350505050610516565b5050565b60006106c783836040516020016106b3929190611737565b60405160208183030381529060405261048e565b905092915050565b6108ba600060028111156106e6576106e5611563565b5b8260028111156106f9576106f8611563565b5b03610708576107499050610744565b6001600281111561071c5761071b611563565b5b82600281111561072f5761072e611563565b5b0361073e576107c39050610744565b61084090505b919050565b6000808573ffffffffffffffffffffffffffffffffffffffff1684866040516107729190611797565b6000604051808303818686f4925050503d80600081146107ae576040519150601f19603f3d011682016040523d82523d6000602084013e6107b3565b606091505b5050905080915050949350505050565b6000808573ffffffffffffffffffffffffffffffffffffffff168484876040516107ed9190611797565b600060405180830381858888f193505050503d806000811461082b576040519150601f19603f3d011682016040523d82523d6000602084013e610830565b606091505b5050905080915050949350505050565b6000808573ffffffffffffffffffffffffffffffffffffffff1684866040516108699190611797565b6000604051808303818686fa925050503d80600081146108a5576040519150601f19603f3d011682016040523d82523d6000602084013e6108aa565b606091505b5050905080915050949350505050565b6108c26117ae565b565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6108eb816108d8565b81146108f657600080fd5b50565b600081359050610908816108e2565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61096182610918565b810181811067ffffffffffffffff821117156109805761097f610929565b5b80604052505050565b60006109936108c4565b905061099f8282610958565b919050565b600067ffffffffffffffff8211156109bf576109be610929565b5b6109c882610918565b9050602081019050919050565b82818337600083830152505050565b60006109f76109f2846109a4565b610989565b905082815260208101848484011115610a1357610a12610913565b5b610a1e8482856109d5565b509392505050565b600082601f830112610a3b57610a3a61090e565b5b8135610a4b8482602086016109e4565b91505092915050565b60008060408385031215610a6b57610a6a6108ce565b5b6000610a79858286016108f9565b925050602083013567ffffffffffffffff811115610a9a57610a996108d3565b5b610aa685828601610a26565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610adb82610ab0565b9050919050565b610aeb81610ad0565b82525050565b6000602082019050610b066000830184610ae2565b92915050565b6000610b1782610ab0565b9050919050565b610b2781610b0c565b8114610b3257600080fd5b50565b600081359050610b4481610b1e565b92915050565b600060208284031215610b6057610b5f6108ce565b5b6000610b6e84828501610b35565b91505092915050565b6000819050919050565b610b8a81610b77565b82525050565b6000602082019050610ba56000830184610b81565b92915050565b60008115159050919050565b610bc081610bab565b82525050565b6000602082019050610bdb6000830184610bb7565b92915050565b610bea81610ad0565b8114610bf557600080fd5b50565b600081359050610c0781610be1565b92915050565b600060208284031215610c2357610c226108ce565b5b6000610c3184828501610bf8565b91505092915050565b600080600060608486031215610c5357610c526108ce565b5b6000610c6186828701610bf8565b935050602084013567ffffffffffffffff811115610c8257610c816108d3565b5b610c8e86828701610a26565b9250506040610c9f868287016108f9565b9150509250925092565b600060208284031215610cbf57610cbe6108ce565b5b600082013567ffffffffffffffff811115610cdd57610cdc6108d3565b5b610ce984828501610a26565b91505092915050565b610cfb81610b77565b8114610d0657600080fd5b50565b600081359050610d1881610cf2565b92915050565b60008060408385031215610d3557610d346108ce565b5b6000610d4385828601610bf8565b9250506020610d5485828601610d09565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d98578082015181840152602081019050610d7d565b60008484015250505050565b6000610daf82610d5e565b610db98185610d69565b9350610dc9818560208601610d7a565b610dd281610918565b840191505092915050565b60006020820190508181036000830152610df78184610da4565b905092915050565b600067ffffffffffffffff821115610e1a57610e19610929565b5b602082029050602081019050919050565b600080fd5b600080fd5b600080fd5b60038110610e4757600080fd5b50565b600081359050610e5981610e3a565b92915050565b600060a08284031215610e7557610e74610e30565b5b610e7f60a0610989565b90506000610e8f84828501610bf8565b600083015250602082013567ffffffffffffffff811115610eb357610eb2610e35565b5b610ebf84828501610a26565b6020830152506040610ed384828501610d09565b6040830152506060610ee784828501610d09565b6060830152506080610efb84828501610e4a565b60808301525092915050565b6000610f1a610f1584610dff565b610989565b90508083825260208201905060208402830185811115610f3d57610f3c610e2b565b5b835b81811015610f8457803567ffffffffffffffff811115610f6257610f6161090e565b5b808601610f6f8982610e5f565b85526020850194505050602081019050610f3f565b5050509392505050565b600082601f830112610fa357610fa261090e565b5b8135610fb3848260208601610f07565b91505092915050565b600060208284031215610fd257610fd16108ce565b5b600082013567ffffffffffffffff811115610ff057610fef6108d3565b5b610ffc84828501610f8e565b91505092915050565b600080fd5b60008083601f8401126110205761101f61090e565b5b8235905067ffffffffffffffff81111561103d5761103c611005565b5b60208301915083602082028301111561105957611058610e2b565b5b9250929050565b60008060208385031215611077576110766108ce565b5b600083013567ffffffffffffffff811115611095576110946108d3565b5b6110a18582860161100a565b92509250509250929050565b6000815190506110bc81610be1565b92915050565b60006110d56110d0846109a4565b610989565b9050828152602081018484840111156110f1576110f0610913565b5b6110fc848285610d7a565b509392505050565b600082601f8301126111195761111861090e565b5b81516111298482602086016110c2565b91505092915050565b60008151905061114181610cf2565b92915050565b60008151905061115681610e3a565b92915050565b600060a0828403121561117257611171610e30565b5b61117c60a0610989565b9050600061118c848285016110ad565b600083015250602082015167ffffffffffffffff8111156111b0576111af610e35565b5b6111bc84828501611104565b60208301525060406111d084828501611132565b60408301525060606111e484828501611132565b60608301525060806111f884828501611147565b60808301525092915050565b600061121761121284610dff565b610989565b9050808382526020820190506020840283018581111561123a57611239610e2b565b5b835b8181101561128157805167ffffffffffffffff81111561125f5761125e61090e565b5b80860161126c898261115c565b8552602085019450505060208101905061123c565b5050509392505050565b600082601f8301126112a05761129f61090e565b5b81516112b0848260208601611204565b91505092915050565b6000602082840312156112cf576112ce6108ce565b5b600082015167ffffffffffffffff8111156112ed576112ec6108d3565b5b6112f98482850161128b565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b61134961134482611302565b61132e565b82525050565b60008160601b9050919050565b60006113678261134f565b9050919050565b60006113798261135c565b9050919050565b61139161138c82610ad0565b61136e565b82525050565b6000819050919050565b6113b26113ad826108d8565b611397565b82525050565b60006113c48287611338565b6001820191506113d48286611380565b6014820191506113e482856113a1565b6020820191506113f482846113a1565b60208201915081905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b6000819050919050565b600061145f6020840184610bf8565b905092915050565b61147081610ad0565b82525050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126114a2576114a1611480565b5b83810192508235915060208301925067ffffffffffffffff8211156114ca576114c9611476565b5b6001820236038313156114e0576114df61147b565b5b509250929050565b600082825260208201905092915050565b600061150583856114e8565b93506115128385846109d5565b61151b83610918565b840190509392505050565b60006115356020840184610d09565b905092915050565b61154681610b77565b82525050565b600061155b6020840184610e4a565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106115a3576115a2611563565b5b50565b60008190506115b482611592565b919050565b60006115c4826115a6565b9050919050565b6115d4816115b9565b82525050565b600060a083016115ed6000840184611450565b6115fa6000860182611467565b506116086020840184611485565b858303602087015261161b8382846114f9565b9250505061162c6040840184611526565b611639604086018261153d565b506116476060840184611526565b611654606086018261153d565b50611662608084018461154c565b61166f60808601826115cb565b508091505092915050565b600061168683836115da565b905092915050565b60008235600160a0038336030381126116aa576116a9611480565b5b82810191505092915050565b6000602082019050919050565b60006116cf8385611435565b9350836020840285016116e184611446565b8060005b878110156117255784840389526116fc828461168e565b611706858261167a565b9450611711836116b6565b925060208a019950506001810190506116e5565b50829750879450505050509392505050565b600060208201905081810360008301526117528184866116c3565b90509392505050565b600081905092915050565b600061177182610d5e565b61177b818561175b565b935061178b818560208601610d7a565b80840191505092915050565b60006117a38284611766565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea26469706673582212200f3fa68781f69e5bd49d185d0bf7eb81cc25814462ba7c8723d8a711a3bbc69064736f6c63430008130033

        salt = 0x0000000000000000000000000000000000000000000000000000000000000001

        expected_address =  0xA8865E8852437aF01B557a5f2B5A430E24462b85

    - Deploy Solidity Create2 create contract ( Addr_4 ) - same data as previous step to demonstrate repeatable address usage
      - address = 0xA8865E8852437aF01B557a5f2B5A430E24462b85 (confirm)

    - Execute the following calls on the framework (replace addresses and combine into one)
      - Call Addr_4 to call Addr_2's commands - delegatecall (sets firstInt and secondInt)
        [Addr_4,0xa30d978a000000000000000000000000E9F535514219F04198880bAf8c02BEEb4688c5B9,0,0,0]
        // replace 0xA8865E8852437aF01B557a5f2B5A430E24462b85
        ["0xA8865E8852437aF01B557a5f2B5A430E24462b85", 0xa30d978a000000000000000000000000E9F535514219F04198880bAf8c02BEEb4688c5B9,0,0,0]

      - Call Addr_4 to executeCalls with a call to self
        // replace 0xA8865E8852437aF01B557a5f2B5A430E24462b85 - including the bytes
        ["0xA8865E8852437aF01B557a5f2B5A430E24462b85",0xe4f2355a000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000A8865E8852437aF01B557a5f2B5A430E24462b8500000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048507a8f000000000000000000000000000000000000000000000000000000000,0,0,0]

      - Call Addr_4 to selfDestruct - call
       [Addr_4,0x3f5a0bdd0000000000000000000000005b38da6a701c568545dcfcb03fcb875f56beddc4,0,0,1]
        // replace 0xA8865E8852437aF01B557a5f2B5A430E24462b85
        ["0xA8865E8852437aF01B557a5f2B5A430E24462b85", 0x3f5a0bdd0000000000000000000000005b38da6a701c568545dcfcb03fcb875f56beddc4,0,0,1] - CALL VS. DELEGATECALL

        COMBINED:
        [["0xA8865E8852437aF01B557a5f2B5A430E24462b85", 0xa30d978a000000000000000000000000E9F535514219F04198880bAf8c02BEEb4688c5B9,0,0,0],["0xA8865E8852437aF01B557a5f2B5A430E24462b85",0xe4f2355a000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000A8865E8852437aF01B557a5f2B5A430E24462b8500000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048507a8f000000000000000000000000000000000000000000000000000000000,0,0,0],["0xA8865E8852437aF01B557a5f2B5A430E24462b85", 0x3f5a0bdd0000000000000000000000005b38da6a701c568545dcfcb03fcb875f56beddc4,0,0,1]]

        // EXPECT:
        - SET firstInt
        - SET secontInt
        - SET selfReferenceCallExecuted
        - Self destruction

        prove recreation.
    */
